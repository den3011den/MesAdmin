@page "/RPM/ResourceManagement"

@using MesAdmin_Models.ResourceManagementModels

@inject IJSRuntime _jsRuntime

@inject IProcessResourcesRepository _processResourcesRepository
@inject IEquipmentRepository _equipmentRepository
@inject IProcessResourcesVMRepository _processResourcesVMRepository

@inject NavigationManager _navigationManager

<_DeleteConfirmation IsParentComponentProcessing="IsLoading" DeleteConfirmationMessage="@DeleteMessage" ConfirmationChanged="ConfirmDelete_Click"></_DeleteConfirmation>

<PageTitle>RPM.ResourceManagement</PageTitle>


<div class="row mt-4">

    <div class="col-6">
        <h4 class="card-title text-primary">ResourceManagement</h4>
    </div>
    

    @*----------------------------------------------------- *@


    @if (processResourcesVMDTOList.Count() > 0)
    {
        @*        <RadzenDataGrid @ref="grid" AllowFiltering="true" AllowPaging="true" PageSize="3" AllowSorting="true" RowRender="@RowRender" ExpandMode="DataGridExpandMode.Single"
    Data="@processResourcesVMDTOList" TItem="ProcessResourcesVMDTO" RowExpand="RowExpand">
    <Template Context="order">
    <RadzenDataGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@processResourcesVMDTOList.Equipments" TItem="EquipmentDTO">
    <Columns>
    <RadzenDataGridColumn TItem="EquipmentDTO" Property="EquipmentId" Title="Код оборудования" />
    <RadzenDataGridColumn TItem="EquipmentDTO" Property="S95Id" Title="Наименование s95Id" />
    <RadzenDataGridColumn TItem="EquipmentDTO" Property="Description" Title="Описание" />
    </Columns>
    </RadzenDataGrid>
    </Template>
    <Columns>
    <RadzenDataGridColumn TItem="ProcessResourcesDTO" Property="InsideId" Title="Код ресурса" />
    <RadzenDataGridColumn TItem="ProcessResourcesDTO" Property="ParentId" Title="Customer" />
    <RadzenDataGridColumn TItem="ProcessResourcesDTO" Property="ResourceName" Title="Наименование ресурса" />
    <RadzenDataGridColumn TItem="ProcessResourcesDTO" Property="Description" Title="Описание" />
    <RadzenDataGridColumn TItem="ProcessResourcesDTO" Property="IsStorage" Title="Складской" />
    <RadzenDataGridColumn TItem="ProcessResourcesDTO" Property="IsProduction" Title="Производственный" />
    <RadzenDataGridColumn TItem="ProcessResourcesDTO" Property="Department" Title="Департамент" />
    <RadzenDataGridColumn TItem="string" Property="EquipmentsString" Title="Оборудование Proficy" />
    </Columns>
    </RadzenDataGrid>*@

    @*PageSize="10" AllowPaging="true"*@
    @*    <h1>@processResourcesVMDTOList.Count()</h1>*@
    @*<RadzenListBox @bind-Value=@selectedEquipment Data=@ProcessResources.Equipments TextProperty="S95Id" ValueProperty="EquipmentId" Style="height:200px" Class="w-100" />*@
    @*SelectionMode="DataGridSelectionMode.Single"
    @bind-Value="@selectedPprocessResourcesVMDTO"
    AllowMultiColumnSorting="true"
    *@


    @*                         @if (data.Equipments.Any())
                            {
                                <table class="table" style="table-layout: fixed;">
                                    <tbody>
                                        @foreach (var objEquip in data.Equipments)
                                        {
                                            <tr>                                                
                                                <td style="width: 300px; font-size:12px">
                                                    @objEquip.S95Id
                                                </td>
                                                <td style="width: 35px; font-size:12px">
                                                    <button title="Удалить оборудование Proficy у ресурса" class="btn btn-danger" style="font-size:16px" @onclick="()=>HandleDeleteEquipment(data.ProcessResources.ParentId, data.ProcessResources.InsideId, objEquip.EquipmentId)"> - </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }*@




        <div class="row cols-6">
                <a href="RPM/ResourceManagement" class="btn btn-primary form-control">+ Добавить новый ресурс</a>
        </div>
        <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Simple" AllowSorting="true" AllowMultiColumnSorting="false" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="processResourcesVMDTOList" TItem="ProcessResourcesVMDTO" LogicalFilterOperator="LogicalFilterOperator.Or"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    ShowMultiColumnSortingIndex="false" style="height: 750px">

            <Columns>
                <RadzenDataGridColumn TItem="ProcessResourcesVMDTO" Title="" Sortable="false" Width="60px" Filterable="false">
                     <Template Context="data">
                         <div class="container">                              
                            <RadzenIcon Icon="delete_forever" title=@($"Удалить ресурс {data.ProcessResources.InsideId} | {data.ProcessResources.ParentId}") style="font-size:18px;cursor: pointer;"
                                    @onclick="()=>HandleDelete(data.ProcessResources.ParentId, data.ProcessResources.InsideId)"></RadzenIcon>
                        </div>
                     </Template>
@*                    <Template Context="data">
                        <RadzenButton Click="(args => HandleAddEquipment(data.ProcessResources.ParentId, data.ProcessResources.InsideId))" Text="Добавить оборудование" ButtonStyle="ButtonStyle.Success"></RadzenButton>
                    </Template>
*@@*                    <Template Context="data">
                        <RadzenButton Click="(args => HandleDelete(data.ProcessResources.ParentId, data.ProcessResources.InsideId))" Text="Удалить" ButtonStyle="ButtonStyle.Danger"></RadzenButton>
                    </Template>*@
                </RadzenDataGridColumn>


                <RadzenDataGridColumn TItem="ProcessResourcesVMDTO" Property="ProcessResources.InsideId" Title="Код ресурса" Width="100px"/>
                <RadzenDataGridColumn TItem="ProcessResourcesVMDTO" Property="ProcessResources.ParentId" Title="Код склада" Width="100px"/>
                <RadzenDataGridColumn TItem="ProcessResourcesVMDTO" Property="ProcessResources.ResourceName" Title="Наименование ресурса" Width="240px"/>
                <RadzenDataGridColumn TItem="ProcessResourcesVMDTO" Property="ProcessResources.Description" Title="Описание" Width="240px"/>
                <RadzenDataGridColumn TItem="ProcessResourcesVMDTO" Property="ProcessResources.IsStorage" Title="Склад" Filterable="false" Width="70px">
                    <Template Context="data">
                        <RadzenCheckBox @bind-Value=data.ProcessResources.IsStorage Disabled="true" TriState="true" TValue="bool" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ProcessResourcesVMDTO" Property="ProcessResources.IsProduction" Title="Произв" Filterable="false" Width="80px">
                    <Template Context="data">
                        <RadzenCheckBox @bind-Value=data.ProcessResources.IsProduction Disabled="true" TriState="true" TValue="bool" />
                    </Template>
                </RadzenDataGridColumn>
                 <RadzenDataGridColumn TItem="ProcessResourcesVMDTO" Title="Оборудование Proficy" Property="ProcessResources.EquipmentsString" Width="380px" Filterable="false" Sortable="false">
                    <Template Context="data">
                          <div class="container"> 
                                <button title=@($"Добавить оборудование Proficy ресурсу {data.ProcessResources.InsideId} | {data.ProcessResources.ParentId}") class="btn btn-primary" style="width: 90%; padding: 0; overflow: hidden; font-size:14px" @onclick="()=>HandleAddEquipment(data.ProcessResources.ParentId, data.ProcessResources.InsideId)"> +  Добавить оборудование </button>
                          </div>
                          <RadzenDataList WrapItems="false" AllowPaging="true" Data="data.Equipments" TItem="EquipmentDTO" PagerHorizontalAlign="HorizontalAlign.Left" PageSize="5" ShowPagingSummary="false">
                              <Template Context="data2">                                  
                                   <RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">        
                                        <div class="container">                                                                                       
                                            <div class="row">                                 
                                                <div class="col-lg-0 p-0" style="width: 10%; cursor: pointer;">
                                                    <RadzenIcon Icon="delete_forever" @onclick="()=>HandleDeleteEquipment(data.ProcessResources.ParentId, data.ProcessResources.InsideId, data2.EquipmentId, data2.S95Id)" title=@($"Удалить оборудование Proficy из ресурса {data.ProcessResources.InsideId} | {data.ProcessResources.ParentId}")/>
                                                </div>
                                                @*<button title="Удалить оборудование Proficy из ресурса SAP" class="btn btn-danger" style="width: 20px; font-size:10px" @onclick="()=>HandleDeleteEquipment(data.ProcessResources.ParentId, data.ProcessResources.InsideId, data2.EquipmentId)"></button>*@
                                                <div class="col-lg-0 p-0" style="width: 70%;">
                                                    @(data2.S95Id)
                                                </div>
                                            </div>
                                        </div>
                                </RadzenCard>
                              </Template>
                          </RadzenDataList>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    }
    else
    {
        if (IsLoading)
        {
            //отображение gif загрузки
            <div class="text-center">
                <img src="/images/loading.gif">
            </div>

        }
    }
</div>



@*----------------------------------------------------*@
@*<div class="row">
    <button class="btn btn-success" @onclick="ToastrSuccess">Тест Toastr Успех</button>
    <button class="btn btn-danger" @onclick="ToastrError">Тест Toastr Ошибка</button>
</div>

<br />

<div class="row">
    <button class="btn btn-success" @onclick="SweetAlertSuccess">Тест SweetAlert Успех</button>
    <button class="btn btn-danger" @onclick="SweetAlertError">Тест SweetAlert Ошибка</button>
</div>*@

@*<button class="btn btn-danger" @onclick="()=>HandleDelete(objCat.ParentId, objCat.InsideId)">Удалить</button>*@

@code {

    private IEnumerable<ProcessResourcesVMDTO> processResourcesVMDTOList { get; set; } = new List<ProcessResourcesVMDTO>();
    IList<ProcessResourcesVMDTO> selectedPprocessResourcesVMDTO;    
    //RadzenDataGrid<ProcessResourcesVMDTO> grid;
    public bool IsLoading { get; set; }
    public string DeleteMessage { get; set; } = "";
    private string DeleteInsideId { get; set; } = "";
    private string DeleteParentId { get; set; } = "";
    private Guid DeleteEquipmentId { get; set; } = Guid.Empty;


    //-----------------------------------------------------


    /*    protected override void OnInitialized()
            {
            orders = dbContext.Orders.Include("Customer").Include("Employee").ToList();
        }  */

    void RowRender(RowRenderEventArgs<ProcessResourcesVMDTO> args)
    {
        args.Expandable = true;
    }

    void RowExpand(ProcessResourcesVMDTO processResourcesVMDTO)
    {
        if (processResourcesVMDTO.Equipments == null)
        {
            //processResourcesVMDTO.Equipments = await _processResourcesVMRepository.Get(processResourcesVMDTO.ProcessResources.ParentId, processResourcesVMDTO.ProcessResources.InsideId).Equipments;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadAllProcessResources();
            selectedPprocessResourcesVMDTO = processResourcesVMDTOList.Take(1).ToList();
            /*grid.ExpandRow(processResourcesVMDTOList.FirstOrDefault());*/
            // StateHasChanged();
        }

        //base.OnAfterRender(firstRender);
    }


    //----------------------------------------------------

    private async Task LoadAllProcessResources()
    {
        /* загурка данных */
        IsLoading = true;
        StateHasChanged();
        processResourcesVMDTOList = await _processResourcesVMRepository.GetAll();
        IsLoading = false;
        StateHasChanged();
    }

    private async Task ToastrSuccess()
    {
        await _jsRuntime.ToastrSuccess("Операция выполнена успешно");
    }

    private async Task ToastrError()
    {
        await _jsRuntime.ToastrError("При выполнении операции произошла ошибка");
    }

    private async Task SweetAlertSuccess()
    {
        await _jsRuntime.InvokeVoidAsync("ShowSwal", "success", "Задача выполнена успешно");
    }

    private async Task SweetAlertError()
    {
        await _jsRuntime.InvokeVoidAsync("ShowSwal", "error", "Ошибка при выполнении задачи");
    }




    private void HandleDelete(string parentId, string insideId)
    {
        DeleteInsideId = insideId;
        DeleteParentId = parentId;
        DeleteMessage = "Удалить ресурс " + insideId + " | " + parentId +" ?";
        _jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    private void HandleDeleteEquipment(string parentId, string insideId, Guid equipmentId, string s95name)
    {
        DeleteInsideId = insideId;
        DeleteParentId = parentId;
        DeleteEquipmentId = equipmentId;
        DeleteMessage = "Удалить оборудование '" + s95name + "' из ресурса " + insideId + " | " + parentId +" ?";
        _jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }


    private void HandleAddEquipment(string parentId, string insideId)
    {


    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsLoading = true;
        // здесь код удаления
        /*if (isConfirmed && DeleteCategoryId != 0)*/
        if (isConfirmed)
        {
            /*await Task.Delay(5000);*/
            //delete
            /*await _categoryRepository.Delete(DeleteCategoryId);
            await LoadCategories(); */
            await _jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        }
        DeleteMessage = "";
        IsLoading = false;
    }


}
